name: BUILD - Simplified

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'Target environment'
        required: false
        type: choice
        options: [dev, staging, prod]
        default: dev
  pull_request:
    branches: [main]
  push:
    branches: [main, 'feature/*', 'bugfix/*', 'hotfix/*']

permissions:
  id-token: write
  contents: read
  pull-requests: write
  security-events: write

env:
  AWS_DEFAULT_REGION: us-east-1
  TF_IN_AUTOMATION: true

concurrency:
  group: build-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build and Validate
    runs-on: ubuntu-latest
    timeout-minutes: 15
    outputs:
      build_id: ${{ steps.info.outputs.build_id }}
      environment: ${{ steps.info.outputs.environment }}
      has_tf_changes: ${{ steps.changes.outputs.terraform }}
      has_content_changes: ${{ steps.changes.outputs.content }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Build Info
        id: info
        run: |
          BUILD_ID="build-${{ github.run_id }}-${{ github.run_attempt }}"
          ENV="${{ github.event.inputs.environment || 'dev' }}"
          
          echo "build_id=$BUILD_ID" >> $GITHUB_OUTPUT
          echo "environment=$ENV" >> $GITHUB_OUTPUT
          
          echo "# 🏗️ BUILD Phase" >> $GITHUB_STEP_SUMMARY
          echo "- **Build ID**: $BUILD_ID" >> $GITHUB_STEP_SUMMARY
          echo "- **Environment**: $ENV" >> $GITHUB_STEP_SUMMARY
          echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY

      - name: Detect Changes
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            terraform:
              - 'terraform/**'
            content:
              - 'src/**'
            workflows:
              - '.github/workflows/**'
            docs:
              - '**/*.md'

      - name: Setup Tools
        if: steps.changes.outputs.terraform == 'true' || github.event_name == 'workflow_dispatch'
        uses: ./.github/actions/setup-infrastructure
        with:
          aws-region: ${{ env.AWS_DEFAULT_REGION }}
          aws-role: ${{ secrets.AWS_ASSUME_ROLE }}

      - name: Validate Terraform
        if: steps.changes.outputs.terraform == 'true' || github.event_name == 'workflow_dispatch'
        working-directory: terraform
        run: |
          echo "## ✅ Terraform Validation" >> $GITHUB_STEP_SUMMARY
          
          # Format check
          if tofu fmt -check -recursive; then
            echo "✅ Format check passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Format check failed - run 'tofu fmt -recursive'" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
          # Initialize without backend for validation
          rm -f backend.tf
          if tofu init -backend=false; then
            echo "✅ Init successful" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Init failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi
          
          # Validate configuration
          if tofu validate; then
            echo "✅ Validation passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ Validation failed" >> $GITHUB_STEP_SUMMARY
            exit 1
          fi

      - name: Security Scan - Checkov
        if: steps.changes.outputs.terraform == 'true' || github.event_name == 'workflow_dispatch'
        continue-on-error: true
        run: |
          echo "## 🔒 Security Scanning" >> $GITHUB_STEP_SUMMARY
          
          # Install Checkov
          pip3 install checkov --quiet
          
          # Run scan
          if checkov -d terraform --quiet --compact --skip-check CKV_AWS_20,CKV_AWS_117; then
            echo "✅ Checkov scan passed" >> $GITHUB_STEP_SUMMARY
          else
            echo "⚠️ Checkov found issues (non-blocking)" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Validate Website Content
        if: steps.changes.outputs.content == 'true' || github.event_name == 'workflow_dispatch'
        run: |
          echo "## 🌐 Website Validation" >> $GITHUB_STEP_SUMMARY
          
          # Check required files
          for file in src/index.html src/404.html src/robots.txt; do
            if [ -f "$file" ]; then
              echo "✅ $file exists" >> $GITHUB_STEP_SUMMARY
            else
              echo "❌ $file missing" >> $GITHUB_STEP_SUMMARY
              exit 1
            fi
          done
          
          # Create build artifact
          tar -czf website.tar.gz -C src .
          echo "✅ Website archive created" >> $GITHUB_STEP_SUMMARY

      - name: Upload Artifacts
        if: steps.changes.outputs.content == 'true' || github.event_name == 'workflow_dispatch'
        uses: actions/upload-artifact@v4
        with:
          name: website-${{ steps.info.outputs.build_id }}
          path: |
            src/
            website.tar.gz
          retention-days: 7

      - name: Summary
        if: always()
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 📊 Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "- Terraform changes: ${{ steps.changes.outputs.terraform == 'true' && '✅ Yes' || '➖ No' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Content changes: ${{ steps.changes.outputs.content == 'true' && '✅ Yes' || '➖ No' }}" >> $GITHUB_STEP_SUMMARY
          echo "- Workflow changes: ${{ steps.changes.outputs.workflows == 'true' && '✅ Yes' || '➖ No' }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ "${{ job.status }}" = "success" ]; then
            echo "✅ **BUILD Successful** - Ready for TEST phase" >> $GITHUB_STEP_SUMMARY
          else
            echo "❌ **BUILD Failed** - Check logs for details" >> $GITHUB_STEP_SUMMARY
          fi