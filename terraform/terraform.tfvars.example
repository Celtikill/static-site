# Terraform Variables Example Configuration
# Copy this file to terraform.tfvars and customize for your environment

# Project Configuration
project_name      = "my-static-website"
environment       = "prod"
github_repository = "your-username/your-repo-name"

# AWS Configuration
aws_region     = "us-east-1"
replica_region = "us-west-2"

# Domain Configuration (optional)
# acm_certificate_arn = "arn:aws:acm:us-east-1:123456789012:certificate/12345678-1234-1234-1234-123456789012"
# domain_aliases      = ["www.example.com", "example.com"]
# domain_name         = "example.com"
# create_route53_zone = true

# S3 Configuration
force_destroy_bucket           = false
enable_versioning             = true
enable_cross_region_replication = true
enable_access_logging          = true

# CloudFront Configuration
cloudfront_price_class = "PriceClass_100"  # Global: PriceClass_All, US/EU: PriceClass_200, US only: PriceClass_100

# Security Configuration
enable_geo_blocking = false
# blocked_countries   = ["CN", "RU"]  # ISO 3166-1 alpha-2 country codes
# ip_whitelist        = ["203.0.113.0/24"]  # Your office IP range
# ip_blacklist        = ["198.51.100.0/24"] # Known bad actors

waf_rate_limit           = 2000
max_request_body_size    = 8192
create_kms_key          = true
log_retention_days      = 30

# IAM Configuration
create_github_oidc_provider    = true  # Set to false if OIDC provider already exists
max_session_duration          = 3600  # 1 hour
enable_readonly_access        = false
create_deployment_service_role = false

# Monitoring Configuration
alert_email_addresses = [
  "admin@example.com",
  "devops@example.com"
]

cloudfront_error_rate_threshold   = 5.0   # Percentage
cache_hit_rate_threshold          = 85.0  # Percentage
waf_blocked_requests_threshold    = 100   # Number of requests
s3_billing_threshold              = 10.0  # USD
cloudfront_billing_threshold      = 20.0  # USD
monthly_budget_limit             = "50"   # USD

enable_deployment_metrics = true

# Content Security Policy
content_security_policy = "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' https:; connect-src 'self'; frame-ancestors 'none'; base-uri 'self'; form-action 'self';"

# CORS Configuration
cors_origins = ["https://www.example.com", "https://example.com"]

# Custom Error Pages
custom_error_responses = [
  {
    error_code            = 404
    response_code         = 404
    response_page_path    = "/404.html"
    error_caching_min_ttl = 300
  },
  {
    error_code            = 403
    response_code         = 404
    response_page_path    = "/404.html"
    error_caching_min_ttl = 300
  },
  {
    error_code            = 500
    response_code         = 500
    response_page_path    = "/500.html"
    error_caching_min_ttl = 0
  }
]

# Resource Tags
common_tags = {
  Project     = "my-static-website"
  Environment = "production"
  ManagedBy   = "opentofu"
  Owner       = "DevOps Team"
  CostCenter  = "Engineering"
  Backup      = "enabled"
  Monitoring  = "enabled"
  Security    = "enhanced"
}

# Feature Flags
enable_enhanced_security       = true
enable_performance_optimization = true
enable_cost_optimization       = true